#!/bin/sh
STAGE=$(cat /persist/stage)
mkdir -p /etc /run /dev/pts
echo "root:x:0:0:root:/:/bin/sh" >> /etc/passwd
mount -t devpts devpts /dev/pts
ln -sf pts/ptmx /dev

mkdir -p /var/help
echo "booted" "$(cat /persist/stage)" of "$(/bin/adtdump --macho-header|/bin/macho-version)" > /var/help/001-title
echo "stage1 " "$(cat /persist/stage1-uname.txt)" >> /var/help/001-title
echo "running" "$(uname -a)" >> /var/help/001-title

cat > /bin/help <<EOF
for a in /var/help/*; do
    cat \$a
    echo
done
EOF

chmod u+x /bin/help

cat > .screenrc <<EOF
split
split -v
focus next
focus next
split -v
focus next
focus next
caption string "menu"
screen -t "menu" /bin/interactor-perl
focus next
screen /usr/bin/watch -t -n .5 /bin/help
focus next
caption string "dmesg"
screen -t "dmesg" cat /proc/kmsg
console on
focus next
caption string "shell"
screen -t "shell" /bin/once-sh
focus next
EOF

(while sleep 1; do receive-commfile; done) &

[ "$STAGE" = "stage2" ] && gadget
[ "$STAGE" = "stage3" ] && wifi &

echo 4 5 4 4 > /proc/sys/kernel/printk

screen -c .screenrc < /dev/tty1 &
(sleep 1; TERM=linux screen -m -x < /dev/ttyGS0) &

touch /noboot
cat > /var/help/050-shell <<EOF
Shell commands (* - currently broken):
 linux       - boot Linux
 stage3      - enter stage3
 m1n1        - launch m1n1
 u-boot      - launch U-Boot
 barebox     - launch barebox
*macos       - launch macOS
*grub        - launch grub

 gadget      - (re)start USB gadget [stage2]
*wifi        - (re)start WiFi gadget [stage3]

 memtool     - inspect or modify memory or MMIO
 x8r8g8b8    - fix framebuffer colors
 x2r10g10b10 - break framebuffer colors
 enable-wdt  - enable the Watchdog Timer
*reboot      - reboot immediately
EOF

while [ -e /noboot ]; do sleep 10; done
